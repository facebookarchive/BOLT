name: ubuntu

on:
  push:
    branches: [ rebased ]
  pull_request:
    branches: [ rebased ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    name: Build with ${{ matrix.CC }}
    strategy:
      matrix:
       include:
         - CC: "gcc"
           CXX: "g++"
         - CC: "clang"
           CXX: "clang++"

    steps:
    - uses: actions/checkout@v2
    
    - name: Install packages
      run: sudo apt-get install gcc-multilib g++-multilib

    - name: Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: export CC=${{ matrix.CC }};
           export CXX=${{ matrix.CXX }};
           cmake llvm -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLLVM_ENABLE_PROJECTS="bolt" -DLLVM_TARGETS_TO_BUILD="X86;AArch64" -DLLVM_ENABLE_ASSERTIONS=ON

    - name: Build and test
      working-directory: ${{github.workspace}}/build
      run: make check-bolt
      
